name: Combined CI / Release

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - '**'

env:
  IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/') }}

jobs:
  ci_cd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Write release version
        if: ${{ env.IS_RELEASE == 'true' }}
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Restore dependencies
        run: dotnet restore mu88.Shared.sln
      - name: Begin Sonar scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:mu88_mu88.Shared /o:mu88 /d:sonar.token=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths=tests/Tests/coverage.opencover.xml
      - name: Build
        run: dotnet build --no-restore mu88.Shared.sln
      - name: Test and collect coverage
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --filter "TestCategory=Unit|TestCategory=Integration"
      - name: End Sonar scan
        run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
      - name: Run system and performance tests
        run: dotnet test --no-build --filter "TestCategory=System|TestCategory=Performance"
      - name: Pack
        run: dotnet pack
      - name: Push packages to NuGet
        if: ${{ env.IS_RELEASE == 'true' }}
        run: |
          dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }}
          dotnet nuget push **/*.snupkg -k ${{ secrets.NUGET_API_KEY }}
